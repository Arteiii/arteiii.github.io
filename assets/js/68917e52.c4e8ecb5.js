"use strict";(self.webpackChunkarteiii_github_io=self.webpackChunkarteiii_github_io||[]).push([[3022],{6909:(e,i,s)=>{s.r(i),s.d(i,{assets:()=>d,contentTitle:()=>c,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var t=s(4848),n=s(8453),r=s(1122),a=s(6025);const o={sidebar_position:8,hide_table_of_contents:!0},c="Virtualization-based security (VBS)",l={id:"windows/internals/vbs",title:"Virtualization-based security (VBS)",description:"With Virtualization-based Security (VBS) enabled, VTL-1 (Virtual Trust Level) is available,",source:"@site/docs/windows/internals/vbs.mdx",sourceDirName:"windows/internals",slug:"/windows/internals/vbs",permalink:"/docs/windows/internals/vbs",draft:!1,unlisted:!1,editUrl:"https://github.com/arteiii/arteiii.github.io/tree/main/docs/windows/internals/vbs.mdx",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8,hide_table_of_contents:!0},sidebar:"docsSidebar",previous:{title:"PE-Structure",permalink:"/docs/windows/internals/pe_structure"},next:{title:"Windows Architecture",permalink:"/docs/windows/internals/internal_structure"}},d={},u=[];function h(e){const i={h1:"h1",header:"header",p:"p",...(0,n.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.header,{children:(0,t.jsx)(i.h1,{id:"virtualization-based-security-vbs",children:"Virtualization-based security (VBS)"})}),"\n","\n",(0,t.jsxs)(i.p,{children:["With Virtualization-based Security (VBS) enabled, VTL-1 (Virtual Trust Level) is available,  ",(0,t.jsx)("br",{}),"\nwhich includes its own secure kernel operating in privileged processor mode (for x86/x64 it is ring-0) ",(0,t.jsx)("br",{}),"\nand an isolated user mode (IUM), which operates in unprivileged mode (ring-3)."]}),"\n",(0,t.jsxs)("div",{style:{display:"flex",flexDirection:"row",alignItems:"center",justifyContent:"space-between",flexWrap:"wrap"},children:[(0,t.jsxs)("div",{style:{flex:1,marginRight:"20px"},children:[(0,t.jsx)("p",{children:(0,t.jsx)(i.p,{children:"In this particular design, an independent binary file called securekernel.exe exists as the secure kernel on\nthe disk. The security environment, IUM, is also present which restricts the permitted system calls and\nincludes unique security system calls that can be executed under VTL-1. The functions can be accessed\nthrough an internal system library dubbed Iumdll.dll, which is the VTL-1 form of Ntdll.dll, as well as\nthrough a Windows subsystem library referred to as Iumbase.dll, which is the VTL-1 edition of\nKernelbase.dll."})}),(0,t.jsx)("p",{children:(0,t.jsx)(i.p,{children:"Copy-on-write practices prohibit VTL-0 applications from modifying binaries utilized by VTL-1. The VTL-1\nkernel, which runs in both kernel mode and VTL-1, has full access to VTL-0 memory and resources. By\nutilizing CPU hardware support known as Second Level Address Translation (SLAT), the hypervisor can restrict\nVTL-0 OS access to specific memory locations. Credential Guard technology, which can store classified\ninformation in these locations, is based on SLAT."})}),(0,t.jsx)("p",{children:(0,t.jsx)(i.p,{children:"The I/O memory management unit (MMU) virtualizes memory access for devices. This can be used to prevent\ndevice drivers from using direct memory access (DMA) to directly access the hypervisor or secure kernel\nphysical areas of memory. This would bypass SLAT because no virtual memory is involved."})}),(0,t.jsx)("p",{children:(0,t.jsx)(i.p,{children:"To ensure the protection of VTL-1 processes, the system has implemented trustlets. Trustlets are a special\nclass of binaries, each with a unique identifier and signature. The secure kernel has hardcoded knowledge of\nall the trustlets created so far. As a result, it is impossible to create new trustlets without access to\nthe secure kernel, which is only accessible by Microsoft."})})]}),(0,t.jsx)(r.A,{alt:"Docusaurus themed image",sources:{light:(0,a.Ay)("/img/windows/wininternals/vbs/windows 10 and server 2016 VBS architecture 2023-09-26 14.27.08.excalidraw.light.svg"),dark:(0,a.Ay)("/img/windows/wininternals/vbs/windows 10 and server 2016 VBS architecture 2023-09-26 14.27.08.excalidraw.dark.svg")},style:{flex:1,maxWidth:"100%",height:"auto"}})]})]})}function p(e={}){const{wrapper:i}={...(0,n.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},8453:(e,i,s)=>{s.d(i,{R:()=>a,x:()=>o});var t=s(6540);const n={},r=t.createContext(n);function a(e){const i=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),t.createElement(r.Provider,{value:i},e.children)}}}]);